local Library = {}
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local UIS = game:GetService('UserInputService')
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = PlayerGui
ScreenGui.Name = "CustomUI"
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 400, 0, 300)
MainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
MainFrame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
MainFrame.BorderSizePixel = 1
MainFrame.BorderColor3 = Color3.new(0, 0, 1) -- Blue outline
MainFrame.Parent = ScreenGui
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 30)
Title.BackgroundColor3 = Color3.new(0.15, 0.15, 0.15)
Title.Text = "Custom UI"
Title.TextColor3 = Color3.new(1, 1, 1)
Title.TextSize = 13
Title.Parent = MainFrame
local TabHolder = Instance.new("Frame")
TabHolder.Size = UDim2.new(1, 0, 0, 30)
TabHolder.BackgroundColor3 = Color3.new(0.15, 0.15, 0.15)
TabHolder.BorderSizePixel = 1
TabHolder.BorderColor3 = Color3.new(0, 0, 1)
TabHolder.Position = UDim2.new(0, 0, 0, 30)
TabHolder.Parent = MainFrame
local TabButtonsHolder = Instance.new("Frame")
TabButtonsHolder.Size = UDim2.new(1, -10, 1, -10)
TabButtonsHolder.Position = UDim2.new(0, 5, 0, 5)
TabButtonsHolder.BackgroundTransparency = 1
TabButtonsHolder.Parent = TabHolder
local ScrollingFrame = Instance.new("ScrollingFrame")
ScrollingFrame.Size = UDim2.new(1, 0, 1, -30)
ScrollingFrame.Position = UDim2.new(0, 0, 0, 60)
ScrollingFrame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
ScrollingFrame.BorderSizePixel = 1
ScrollingFrame.BorderColor3 = Color3.new(0, 0, 1)
ScrollingFrame.Parent = MainFrame
ScrollingFrame.ScrollBarThickness = 10
local TabsLayout = Instance.new("UIListLayout")
TabsLayout.FillDirection = Enum.FillDirection.Horizontal
TabsLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
TabsLayout.SortOrder = Enum.SortOrder.LayoutOrder
TabsLayout.Parent = TabButtonsHolder
local ContentLayout = Instance.new("UIListLayout")
ContentLayout.FillDirection = Enum.FillDirection.Vertical
ContentLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
ContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
ContentLayout.Parent = ScrollingFrame

-- Function to create title
function Library:CreateTitle(titleText)
    Title.Text = titleText
end

-- Function to create a button
function Library:CreateButton(tab, buttonName, callback)
    local Button = Instance.new("TextButton")
    Button.Size = UDim2.new(1, -10, 0, 40)  
    Button.Text = buttonName
    Button.TextColor3 = Color3.new(1, 1, 1)
    Button.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
    Button.BorderSizePixel = 1
    Button.BorderColor3 = Color3.new(0, 0, 1)
    Button.Parent = tab

    -- Correctly adjust position based on number of previous buttons
    local buttonCount = #tab:GetChildren() - 1
    Button.Position = UDim2.new(0, 0, 0, buttonCount * 55) 

    local function updateCanvasSize()
        game:GetService("TweenService"):Create(tab.Parent, TweenInfo.new(0.1), {
            CanvasSize = UDim2.new(0, 0, 0, tab.UIListLayout.AbsoluteContentSize.Y)
        }):Play()
    end
    Button:GetPropertyChangedSignal("AbsoluteSize"):Connect(updateCanvasSize)

    Button.MouseButton1Click:Connect(callback)
end

-- Function to create a tab
function Library:CreateTab(tabName)
    local TabButton = Instance.new("TextButton")
    TabButton.Size = UDim2.new(0, 100, 1, 0)
    TabButton.Text = tabName
    TabButton.TextColor3 = Color3.new(1, 1, 1)
    TabButton.BackgroundColor3 = Color3.new(0.15, 0.15, 0.15)
    TabButton.BorderSizePixel = 1
    TabButton.BorderColor3 = Color3.new(0, 0, 1)
    TabButton.Parent = TabButtonsHolder

    local TabContent = Instance.new("Frame")
    TabContent.Size = UDim2.new(1, 0, 1, 0)
    TabContent.BackgroundTransparency = 1
    TabContent.Visible = false
    TabContent.Parent = ScrollingFrame

    TabButton.MouseButton1Click:Connect(function()
        for _, child in ipairs(ScrollingFrame:GetChildren()) do
            if child:IsA("Frame") then
                child.Visible = false
            end
        end
        TabContent.Visible = true
    end)

    return TabContent
end

-- Function to create a toggle button
function Library:CreateToggle(tab, ToggleName, callback)
    local Toggle = Instance.new("TextButton")
    local Frame = Instance.new("Frame")

    Toggle.Name = "Toggle"
    Toggle.Parent = tab
    Toggle.BackgroundColor3 = Color3.new(0.00392157, 0.00392157, 0.00392157)
    Toggle.BorderColor3 = Color3.new(0, 0, 1)
    Toggle.BorderSizePixel = 0
    Toggle.Position = UDim2.new(0.4477534, 0, 0.469437659, 0)
    Toggle.Size = UDim2.new(0, 221, 0, 50)
    Toggle.Font = Enum.Font.SourceSans
    Toggle.Text = ToggleName
    Toggle.TextColor3 = Color3.new(1, 1, 1)
    Toggle.TextSize = 14

    Frame.Parent = Toggle
    Frame.BackgroundColor3 = Color3.new(0, 1, 0)  -- Set initial color to green (ON)
    Frame.BorderColor3 = Color3.new(0, 1, 0)
    Frame.BorderSizePixel = 0
    Frame.Size = UDim2.new(0, 221, 0, 3)
    
    -- Correctly position the frame
    local toggleCount = #tab:GetChildren() - 1  
    Toggle.Position = UDim2.new(0, 0, 0, toggleCount * 55) 

    local function updateCanvasSize()
        game:GetService("TweenService"):Create(tab.Parent, TweenInfo.new(0.1), {
            CanvasSize = UDim2.new(0, 0, 0, tab.UIListLayout.AbsoluteContentSize.Y)
        }):Play()
    end
    Frame:GetPropertyChangedSignal("AbsoluteSize"):Connect(updateCanvasSize)

    local isOn = true  -- State variable to track toggle state (ON/OFF)

    local function toggleState()
        if isOn then
            Frame.BackgroundColor3 = Color3.new(1, 0, 0) 
            isOn = false
        else
            Frame.BackgroundColor3 = Color3.new(0, 1, 0) 
            isOn = true 
        end
    end

    Toggle.MouseButton1Click:Connect(function()
        if callback then
            callback(isOn)  
        end
        toggleState()  
    end)
end


-- Draggable frame logic
local dragToggle = false
local dragSpeed = 0
local dragStart = nil
local starPos = nil
local function updateInput(input)
    local delta = input.Position - dragStart
    local position = UDim2.new(starPos.X.Scale, starPos.X.Offset + delta.X, starPos.Y.Scale, starPos.Y.Offset + delta.Y)
    game:GetService('TweenService'):Create(MainFrame, TweenInfo.new(dragSpeed), {Position = position}):Play()
end

Title.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragToggle = true
        dragStart = input.Position
        starPos = MainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragToggle = false
            end
        end)
    end
end)

UIS.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        if dragToggle then
            updateInput(input)
        end
    end
end)


return Library

